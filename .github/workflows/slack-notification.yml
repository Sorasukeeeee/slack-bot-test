name: Slack Notification

on: 
  issue_comment:
    types: [created]

env:
  SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
  START_review_COMMENT: '/review'

jobs:
  notification:
    permissions:
      contents: read
    name: 'Notification'
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true
    steps:
      # 「/review」とユーザーがコメントした場合
    - name: 'Start review'
      if: github.event.issue.state == 'open' && github.event.issue.pull_request != null && github.event.comment.body == env.START_review_COMMENT
      run: |
        curl -X POST \
          --data-urlencode 'payload={
            "text": "<@${{secrets.SLACK_USER_ID}}>\n PRのレビュー依頼が届きました！ご確認をお願いします！:bow:",
            "blocks": [],
            "attachments": [
              {
                "color": "#FFC0CB",
                "blocks": [
                  {
                    "type": "context",
                    "elements": [
                      {
                        "type": "image",
                        "image_url": "https://avatars.githubusercontent.com/${{ github.actor }}",
                        "alt_text": "github_icon"
                      },
                      {
                        "type": "mrkdwn",
                        "text": "${{ github.actor }}"
                      }
                    ]
                  },
                  {
                    "type": "section",
                    "block_id": "sectionBlockOnlyMrkdwna",
                    "text": {
                      "type": "mrkdwn",
                      "text": "*タイトル*\n ${{ github.event.issue.title }}"
                    }
                  },
                  {
                    "type": "section",
                    "block_id": "sectionBlockOnlyMrkdwnb",
                    "text": {
                      "type": "mrkdwn",
                      "text": "*URL*\n https://github.com/${{ github.repository }}/pull/${{ github.event.issue.number }}"
                    }
                  }
                ]
              }
            ]
          }' \
        ${{ secrets.SLACK_WEBHOOK }}
      
  addCommentIfSkipped:
    permissions:
      contents: read
      issues: write
    runs-on: ubuntu-latest
    needs: notification
    if: always() && (needs.notification.result == 'cancelled' || needs.notification.result == 'failure')
    steps:
    - name: Post Comment
      uses: actions/github-script@v3
      env:
        MESSAGE: |
          レビュー依頼がスキップまたは失敗しました。
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          github.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: process.env.MESSAGE
          })
